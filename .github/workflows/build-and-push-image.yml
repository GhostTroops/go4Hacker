name: Build Image and Publish to Dockerhub & GPR

on:
  release:
    types: [ created ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Image tag'
        required: true
        default: 'test'
jobs:
  binary:
    name: Build Golang project
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - run: |
          # https://github.com/actions/setup-go/issues/107
          cp -f `which go` /usr/bin/go

      - run: go version

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build
        run: make build

      - name: Archive artifacts for go4Hackerc
        uses: actions/upload-artifact@v1
        with:
          name: go4Hackerc
          path: bin/go4Hackerc

      - name: Archive artifacts for go4Hackers
        uses: actions/upload-artifact@v1
        with:
          name: go4Hackers
          path: bin/go4Hackers

  image:
    name: Build Image from Dockerfile and binaries
    runs-on: ubuntu-latest
    needs: binary
    steps:
      # environment
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # download binaries of go4Hackerc and go4Hackers
      - name: Download binary of go4Hackerc
        uses: actions/download-artifact@v2
        with:
          name: go4Hackerc
          path: bin/go4Hackerc

      - name: Download binary of go4Hackers
        uses: actions/download-artifact@v2
        with:
          name: go4Hackers
          path: bin/go4Hackers

      # get image tag name
      - name: Get Image Tag Name
        run: |
          if [ x${{ github.event.inputs.tag }} == x"" ]; then
            echo "TAG_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          else
            echo "TAG_NAME=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          fi

      # prepare image tags
      - name: Prepare Image Tags
        run: |
          echo "DOCKERFILE_go4HackerC_PATH=dockerfiles/Dockerfile-for-go4Hackerc" >> $GITHUB_ENV
          echo "DOCKERFILE_go4HackerS_PATH=dockerfiles/Dockerfile-for-go4Hackers" >> $GITHUB_ENV
          echo "TAG_go4HackerC=hktalent/go4Hackerc:${{ env.TAG_NAME }}" >> $GITHUB_ENV
          echo "TAG_go4HackerS=hktalent/go4Hackers:${{ env.TAG_NAME }}" >> $GITHUB_ENV
          echo "TAG_go4HackerC_GPR=ghcr.io/hktalent/go4Hackerc:${{ env.TAG_NAME }}" >> $GITHUB_ENV
          echo "TAG_go4HackerS_GPR=ghcr.io/hktalent/go4Hackers:${{ env.TAG_NAME }}" >> $GITHUB_ENV

      # build images
      - name: Build Images
        run: |
          # for Docker hub
          docker build --file ${{ env.DOCKERFILE_go4HackerC_PATH }} --tag ${{ env.TAG_go4HackerC }} .
          docker build --file ${{ env.DOCKERFILE_go4HackerS_PATH }} --tag ${{ env.TAG_go4HackerS }} .
          # for GPR
          docker build --file ${{ env.DOCKERFILE_go4HackerC_PATH }} --tag ${{ env.TAG_go4HackerC_GPR }} .
          docker build --file ${{ env.DOCKERFILE_go4HackerS_PATH }} --tag ${{ env.TAG_go4HackerS_GPR }} .

      # push to dockerhub
      - name: Publish to Dockerhub
        run: |
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push ${{ env.TAG_go4HackerC }}
          docker push ${{ env.TAG_go4HackerS }}

      # push to gpr
      - name: Publish to GPR
        run: |
          echo ${{ secrets.GPR_TOKEN }} | docker login ghcr.io --username ${{ github.repository_owner }} --password-stdin
          docker push ${{ env.TAG_go4HackerC_GPR }}
          docker push ${{ env.TAG_go4HackerS_GPR }}
